<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:loc="clr-namespace:IndDictionary.Converters"
             xmlns:inddictionary="clr-namespace:IndDictionary"
             x:Class="IndDictionary.FullInform">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="Medium"/>
                <Setter Property="Margin" Value="10, 7, 2, 10"/>
            </Style>
            <Style x:Key="forEntrys" TargetType="Entry" >
                <Setter Property="FontSize" Value="Large"/>
                <Setter Property="Margin" Value="10, 7, 10, 10"/>
                <!--Setter Property="HeightRequest" Value="300"/-->
            </Style>
            <Style x:Key="MainSpace" TargetType="Entry" BasedOn="{StaticResource forEntrys}">
                <Setter Property="TextColor" Value="DarkBlue"/>
            </Style>
            <loc:BoolConverter x:Key="boolConverter"/>
            <loc:CheckBoxToString x:Key="checkBoxToString"/>
            <loc:DateToString x:Key="dateToString"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    
        <ContentPage.Content>
        <RelativeLayout x:Name="BaseLayout" BackgroundColor="Beige">
            <Picker x:Name="TopicSpace" Margin="10, 7, 2, 4"
                    SelectedIndexChanged="onRecordChanged"
                IsVisible="{Binding Source={x:Reference EditBox}, Path=IsToggled}"/>
            <Label x:Name="TopicSpaceLabel" Text="{Binding Source={x:Reference TopicSpace}, Path=SelectedItem}"
                   IsVisible="{Binding Source={x:Reference EditBox}, Path=IsToggled,
                                Converter={StaticResource boolConverter}}"/>
            
            <DatePicker x:Name="DateSpace" Date="{Binding DateRec}" Margin="10, 7, 10, 10" 
                        IsVisible="{Binding Source={x:Reference EditBox}, Path=IsToggled}"
                        DateSelected="onRecordChanged"
                        RelativeLayout.XConstraint="{ConstraintExpression   Type=RelativeToParent,
                                                                            Property=Width, Factor=.7,
                                                                            Constant=0}"/>
            <Label x:Name="DataSpaceLabel" Text="{Binding Source={x:Reference DateSpace}, Path=Date,
                    Converter={StaticResource dateToString}}"
                   IsVisible="{Binding Source={x:Reference EditBox}, Path=IsToggled,
                                Converter={StaticResource boolConverter}}"
                   RelativeLayout.XConstraint="{ConstraintExpression   Type=RelativeToParent,
                                                                            Property=Width, Factor=.7,
                                                                            Constant=0}"/>
                
            <Editor x:Name="WordSpace" Text="{Binding Word}" Style="{StaticResource MainSpace}" 
                    Placeholder="Word"
                    TextChanged="onRecordChanged"
                    IsReadOnly="{Binding Source={x:Reference EditBox}, Path=IsToggled, 
                                Converter={StaticResource boolConverter}}"  
                   RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,
                                                                        ElementName=TopicSpace,
                                                                        Property=Height, Factor=1, Constant=10}"
                   RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                            Property=Height, Factor=.35}"
                   RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent,
                                                                            Property=Width, Factor=1}"/>
            <Editor x:Name="TransSpace" Text="{Binding Translation}" Style="{StaticResource forEntrys}" 
                    Placeholder="Translation"
                    TextChanged="onRecordChanged"
                    IsReadOnly="{Binding Source={x:Reference EditBox}, Path=IsToggled,
                                Converter={StaticResource boolConverter}}"/>
            <StackLayout x:Name="LabelSpace">
                <Label x:Name="RelSpace" Text="{Binding Relevation, StringFormat='Открывалось {0} раз'}"/>
                <Label x:Name="GradeSpace" Text="{Binding Grade, StringFormat='Оценка {0}'}"/>
            </StackLayout>
            <StackLayout x:Name="CheckBoxSpace" Orientation="Horizontal"
                         RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,
                                                        ElementName=LabelSpace,
                                                        Property=Y, Constant=35}"
                         RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent,
                                                        Property=Width, Factor=.65}">
                <inddictionary:ExtSwitch x:Name="EditBox" Margin="30,10,0,0"/>
                <Label IsVisible="{Binding Source={x:Reference EditBox}, Path=IsVisible}"
                    Text="{Binding Source={x:Reference EditBox}, Path=IsToggled,
                    Converter={StaticResource checkBoxToString}}"/>
                <Button x:Name="ConfirmB" Text="Confirm" Pressed="onConfPress"
                        IsVisible="{Binding Source={x:Reference EditBox}, Path=IsVisible, 
                    Converter={StaticResource boolConverter}, Mode=TwoWay}"/>
                <Button x:Name="DeclineB" Text="Decline" Pressed="onDeclPress"
                        IsVisible="{Binding Source={x:Reference ConfirmB}, Path=IsVisible}"/>
                <Button x:Name="DeleteB" Text="Delete" Pressed="onDelPress"
                        IsVisible="{Binding Source={x:Reference ConfirmB}, Path=IsVisible}"/>
            </StackLayout>
            
            
        </RelativeLayout>
    </ContentPage.Content>
</ContentPage>